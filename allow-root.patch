diff -up kate-19.04.0/kate/main.cpp.1~ kate-19.04.0/kate/main.cpp
--- kate-19.04.0/kate/main.cpp.1~	2019-04-09 09:03:07.000000000 +0200
+++ kate-19.04.0/kate/main.cpp	2019-04-13 00:10:58.090769759 +0200
@@ -58,18 +58,7 @@
 
 int main(int argc, char **argv)
 {
-#ifndef Q_OS_WIN
-    // Prohibit using sudo or kdesu (but allow using the root user directly)
-    if (getuid() == 0) {
-        if (!qEnvironmentVariableIsEmpty("SUDO_USER")) {
-            std::cout << "Executing Kate with sudo is not possible due to unfixable security vulnerabilities." << std::endl;
-            return EXIT_FAILURE;
-        } else if (!qEnvironmentVariableIsEmpty("KDESU_USER")) {
-            std::cout << "Executing Kate with kdesu is not possible due to unfixable security vulnerabilities." << std::endl;
-            return EXIT_FAILURE;
-        }
-    }
-#endif
+
     /**
      * init resources from our static lib
      */
diff -up kate-19.04.0/kwrite/main.cpp.1~ kate-19.04.0/kwrite/main.cpp
--- kate-19.04.0/kwrite/main.cpp.1~	2019-04-13 00:10:58.090769759 +0200
+++ kate-19.04.0/kwrite/main.cpp	2019-04-13 00:11:52.081326714 +0200
@@ -50,18 +50,6 @@
 
 extern "C" Q_DECL_EXPORT int main(int argc, char **argv)
 {
-#ifndef Q_OS_WIN
-    // Prohibit using sudo or kdesu (but allow using the root user directly)
-    if (getuid() == 0) {
-        if (!qEnvironmentVariableIsEmpty("SUDO_USER")) {
-            std::cout << "Executing KWrite with sudo is not possible due to unfixable security vulnerabilities." << std::endl;
-            return EXIT_FAILURE;
-        } else if (!qEnvironmentVariableIsEmpty("KDESU_USER")) {
-            std::cout << "Executing KWrite with kdesu is not possible due to unfixable security vulnerabilities." << std::endl;
-            return EXIT_FAILURE;
-        }
-    }
-#endif
     /**
      * Create application first
      * Enforce application name even if the executable is renamed
